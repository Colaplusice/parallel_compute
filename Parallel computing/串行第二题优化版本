//
//  main.c
//  P_demo
//
//  Created by 樊佳亮 on 2017/11/17.
//  Copyright © 2017年 樊佳亮. All rights reserved.
//
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <time.h>
#include <limits.h>

/* A B C D E F G H I J K L M N O P Q R S T U V W X Y Z */
int sd[26][26] = {{ 4,-2, 0,-2,-1,-2, 0,-2,-1, 0,-1,-1,-1,-2, 0,-1,-1,-1, 1, 0, 0, 0,-3, 0,-2,-1 },
    /* B */{ -2, 4,-3, 4, 1,-3,-1, 0,-3, 0, 0,-4,-3, 3, 0,-2, 0,-1, 0,-1, 0,-3,-4,-1,-3, 1 },
    /* C */{ 0,-3, 9,-3,-4,-2,-3,-3,-1, 0,-3,-1,-1,-3, 0,-3,-3,-3,-1,-1, 0,-1,-2,-2,-2,-3 },
    /* D */{ -2, 4,-3, 6, 2,-3,-1,-1,-3, 0,-1,-4,-3, 1, 0,-1, 0,-2, 0,-1, 0,-3,-4,-1,-3, 1 },
    /* E */{ -1, 1,-4, 2, 5,-3,-2, 0,-3, 0, 1,-3,-2, 0, 0,-1, 2, 0, 0,-1, 0,-2,-3,-1,-2, 4 },
    /* F */{ -2,-3,-2,-3,-3, 6,-3,-1, 0, 0,-3, 0, 0,-3, 0,-4,-3,-3,-2,-2, 0,-1, 1,-1, 3,-3 },
    /* G */{ 0,-1,-3,-1,-2,-3, 6,-2,-4, 0,-2,-4,-3, 0, 0,-2,-2,-2, 0,-2, 0,-3,-2,-1,-3,-2 },
    /* H */{ -2, 0,-3,-1, 0,-1,-2, 8,-3, 0,-1,-3,-2, 1, 0,-2, 0, 0,-1,-2, 0,-3,-2,-1, 2, 0 },
    /* I */{ -1,-3,-1,-3,-3, 0,-4,-3, 4, 0,-3, 2, 1,-3, 0,-3,-3,-3,-2,-1, 0, 3,-3,-1,-1,-3 },
    /* J */{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    /* K */{ -1, 0,-3,-1, 1,-3,-2,-1,-3, 0, 5,-2,-1, 0, 0,-1, 1, 2, 0,-1, 0,-2,-3,-1,-2, 1 },
    /* L */{ -1,-4,-1,-4,-3, 0,-4,-3, 2, 0,-2, 4, 2,-3, 0,-3,-2,-2,-2,-1, 0, 1,-2,-1,-1,-3 },
    /* M */{ -1,-3,-1,-3,-2, 0,-3,-2, 1, 0,-1, 2, 5,-2, 0,-2, 0,-1,-1,-1, 0, 1,-1,-1,-1,-1 },
    /* N */{ -2, 3,-3, 1, 0,-3, 0, 1,-3, 0, 0,-3,-2, 6, 0,-2, 0, 0, 1, 0, 0,-3,-4,-1,-2, 0 },
    /* O */{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    /* P */{ -1,-2,-3,-1,-1,-4,-2,-2,-3, 0,-1,-3,-2,-2, 0, 7,-1,-2,-1,-1, 0,-2,-4,-2,-3,-1 },
    /* Q */{ -1, 0,-3, 0, 2,-3,-2, 0,-3, 0, 1,-2, 0, 0, 0,-1, 5, 1, 0,-1, 0,-2,-2,-1,-1, 3 },
    /* R */{ -1,-1,-3,-2, 0,-3,-2, 0,-3, 0, 2,-2,-1, 0, 0,-2, 1, 5,-1,-1, 0,-3,-3,-1,-2, 0 },
    /* S */{ 1, 0,-1, 0, 0,-2, 0,-1,-2, 0, 0,-2,-1, 1, 0,-1, 0,-1, 4, 1, 0,-2,-3, 0,-2, 0 },
    /* T */{ 0,-1,-1,-1,-1,-2,-2,-2,-1, 0,-1,-1,-1, 0, 0,-1,-1,-1, 1, 5, 0, 0,-2, 0,-2,-1 },
    /* U */{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    /* V */{ 0,-3,-1,-3,-2,-1,-3,-3, 3, 0,-2, 1, 1,-3, 0,-2,-2,-3,-2, 0, 0, 4,-3,-1,-1,-2 },
    /* W */{ -3,-4,-2,-4,-3, 1,-2,-2,-3, 0,-3,-2,-1,-4, 0,-4,-2,-3,-3,-2, 0,-3,11,-2, 2,-3 },
    /* X */{ 0,-1,-2,-1,-1,-1,-1,-1,-1, 0,-1,-1,-1,-1, 0,-2,-1,-1, 0, 0, 0,-1,-2,-1,-1,-1 },
    /* Y */{ -2,-3,-2,-3,-2, 3,-3, 2,-1, 0,-2,-1,-1,-2, 0,-3,-1,-2,-2,-2, 0,-1, 2,-1, 7,-2 },
    /* Z */{ -1, 1,-3, 1, 4,-3,-2, 0,-3, 0, 1,-3,-1, 0, 0,-1, 3, 0, 0,-1, 0,-2,-3,-1,-2, 4 } };
int **max;
int *M2;
int *M3;
int S;
int m[20];
int count;
int printrow;
void  Mon(){
    for (int i=0; i<S; i++) {
        M2[i*S+0 ]=i*-8;
        M2[0*S+i]=i*-8;
    }
    for (int i=1; i<S; i++) {
        for (int j=1; j<S;j++ ) {
            int ma1=M2[(i-1)*S+j-1]+sd[(i-1)%26][(j-1)%26];
            int ma2 = INT_MIN;
            int ma3 = INT_MIN;
            for(int k = 0; k < j; k++) {
                if(M2[i*S + k] + (j - k) * (j - k) >ma2)
                    ma2 = M2[i*S + k] + (j - k) * (j - k);
            }
            for(int k = 0; k < i; k++) {
                if(M2[k*S + j] + (i - k) * (i - k) >ma3)
                    ma3 = M2[k*S + j] + (i - k) * (i - k);
            }
            M2[i*S+j]= (ma1>ma2 ? (ma1 >ma3 ? ma1 : ma3) : (ma3 >ma2 ? ma3  :ma2));
            
            
        }
    }
}
void ZJ(){
    for (int i=0; i<S; i++) {
        M3[i*S+0 ]=i*-8;
        M3[0*S+i]=i*-8;
    }
    int k=1;
    while(k<S){
        k++;
        for (int i=1; i<k; i++) {
            int j=k-i;
            int ma1=M3[(i-1)*S+j-1]+sd[(i-1)%26][(j-1)%26];
            int ma2 = INT_MIN;
            int ma3 = INT_MIN;
            for(int k = 0; k < j; k++) {
                if(M3[i*S + k] + (j - k) * (j - k) >ma2)
                    ma2 = M3[i*S + k] + (j - k) * (j - k);
            }
            for(int k = 0; k < i; k++) {
                if(M3[k*S + j] + (i - k) * (i - k) >ma3)
                    ma3 = M3[k*S + j] + (i - k) * (i - k);
            }
            M3[i*S+j]= (ma1>ma2 ? (ma1 >ma3 ? ma1 : ma3) : (ma3 >ma2 ? ma3  :ma2));
        }
    }
        while(k>=S&&k<S*2){
            k++;
            for (int i =1; i <=S; i+=1)
            {
                int j=k-i-1;
                int ma1=M3[(i-1)*S+j-1]+sd[(i-1)%26][(j-1)%26];
                int ma2 = INT_MIN;
                int ma3 = INT_MIN;
                if (i>=S||j>=S)
                {
                    continue;
                }
                for(int k = 0; k < j; k++) {
                    if(M3[i*S + k] + (j - k) * (j - k) >ma2)
                        ma2 = M3[i*S + k] + (j - k) * (j - k);
                }
                for(int k = 0; k < i; k++) {
                    if(M3[k*S + j] + (i - k) * (i - k) >ma3)
                        ma3 = M3[k*S + j] + (i - k) * (i - k);
                }
                M3[i*S+j]= (ma1>ma2 ? (ma1 >ma3 ? ma1 : ma3) : (ma3 >ma2 ? ma3  :ma2));
            }
        }
    }
int Max(int i, int j) {
    max[i][j]=M3[i*S+j];
    return 0;
}
void out(int i,int j) {
    printf("***********************************\n");
    for (int j2 =0; j2<j; ++j2)
    {
        printf("%d\t",max[i][j2] );
    }
}
void out_8(){
    printf("***********************************\n");
    for (int i =0; i<8; ++i)
    {
        for (int j=0; j<8; j++) {
            printf("%d\t",max[i][j]);
        }
        printf("\n");
    }
}
void OutM(){
    for(int i=0;i<8;i++){
        for (int j=0; j<8; j++) {
           printf("%d\t",M3[i*S+j]);
        }
        printf("\n");

    }
}
void * hello(void *rank)
{
    int my_rank=(int)rank;
    int k=0;
    while(k<S){
        for(int i=my_rank;i<=k;i+=count)
        {
            Max(i, k-i);
            // printf("i:%d j:%d\t",i,k-i );
            // printf("%di:\n",i);
        }
        //out(k,k);
        k++;
    }
    while(k>=S&&k<S*2){
        k++;
        for (int i =my_rank+1; i <=S; i+=count)
        {
            if (i>=S||(k-i-1)>=S)
            {
                continue;
            }
            Max(i,k-i-1);
            
        }
        
        //out(7,7);
    }
    
    return NULL;
}
int main(int argc,char *argv[])
{
    clock_t start,finish;
    double total_time;
    start=clock();
   /// count=atoi(argv[1]);
    //int first=atoi(argv[2]);
    //int second=atoi(argv[3]);
    count=1;
    
    S =1000;
    int second=200;
    printrow=second;
    max=(int**) malloc(S*sizeof(int));
    M2=malloc(S*S*sizeof(int));
    M3=malloc(S*S*sizeof(int));
    //Mon();
   ZJ();
    for (int i = 0; i <S; i++)
    {
        max[i]=(int*)malloc(S*sizeof(int));
    }
    OutM();
    finish=clock();
    total_time=(double)(finish-start)/CLOCKS_PER_SEC;
    printf(" second:%f\n",total_time );
    return 0;
}
